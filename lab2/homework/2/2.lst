     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; d-(a+b)-(c+c)
     4                                  
     5                                  
     6                                  
     7                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     8                                  global start        
     9                                  
    10                                  ; declare external functions needed by our program
    11                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    12                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 0F                          a db 15
    18 00000001 03                          b db 3
    19 00000002 04                          c db 4
    20 00000003 1C                          d db 28
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 A0[03000000]                    mov AL, [d]
    26 00000005 8A1D[00000000]                  mov BL, [a]
    27 0000000B 021D[01000000]                  add BL, [b] ; BL = a + b
    28 00000011 28D8                            sub AL, BL ; AL = d - (a+b)
    29                                          
    30 00000013 8A1D[02000000]                  mov BL, [c]
    31 00000019 021D[02000000]                  add BL, [c]
    32                                          
    33 0000001F 28D8                            sub AL, BL
    34                                      
    35                                          ; exit(0)
    36 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
