     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 8877665544332211            a dq 1122334455667788h
    14 00000008 DEC4B3A2F1DEBC0A            b dq 0abcdef1a2b3c4deh
    15                                  
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 A1[00000000]                    mov EAX, [a]
    20 00000005 8B15[04000000]                  mov EDX, [a+4]
    21                                          
    22 0000000B 8B0D[08000000]                  mov ECX, [b] ; ECX = 2b3c4d5e
    23 00000011 8B1D[0C000000]                  mov EBX, [b+4] ; EBX = abcdef1a
    24                                          
    25 00000017 01C8                            add EAX, ECX ; EAX = EAX + ECX and set CF to 0/1
    26 00000019 11DA                            adc EDX, EBX ; EDX = EDX + EBX + CF
    27                                      
    28                                          ; exit(0)
    29 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    30 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
